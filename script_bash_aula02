
/* 
Aula 01 - Linux - comandos/navegação

crie um diretório no /tmp com o seu nome
crie dois arquivos nesse diretorio criado
copie um desses arquivos para o seu home
copie o diretório criado para o seu home
crie um script em bash que executa os passos acima (usando nano)
troque o modo desse script para permitir a execução (chmod a+x <nome_do_arquivo>
execute o script ./nomedoscript.sh 
*/

mkdir marcia
touch teste01
touch teste02
cp /tmp/marcia/teste02 /home/marciarodrigues/
cp -r /tmp/marcia /home/marciarodrigues/

nano script.sh
	mkdir marcia
	touch teste01
	touch teste02
	cp /tmp/marcia/teste02 /home/marciarodrigues/
	cp -r /tmp/marcia /home/marciarodrigues/
	
chmod a+x script.sh
./script.sh


/* 
Aula 02 - Linux - command line utilities

Crie um arquivo com vários nomes de cidades (misturando cidades que começam com letra maíuscula minúscula, e cidades repetidas)

Faça um script que retorna:

a quantidade de repeticoes por cidades
a quantidade total de cidades no arquivo
a quantidade única de cidades no arquivo
a quantidade única de caracteres no arquivo
Faça um script que classifica por ordem alfabetica decrescente as cidades por nome e salva em um arquivo chamado arq1
Faça um script que selecione as cidades na posição 12 e 13 por ordem crescente e coloca em em um arquivo chamado arq2
Faça um script que copia os arquivos arq1 e arq2 para /tmp e depois os apaga 
*/

nano cidades
cat cidades
	Curitiba
	Floripa
	Rio de Janeiro
	Montevideo
	Londrina
	Floripa
	Curitiba
	Santiago
	Recife
	
nano script_cidades.sh

cat script_cidades.sh

repetitions: sort cidades | uniq -c
total quantity: wc -l cidades
unique lines: sort inputfile | uniq -u
unique characters: fold -w1 | sort -u
classificar por ordem alfabetica: cat cidades | sort -n OU cat cidades | sort -rn




/*
Aula 3 - Exercícios Git/GitHub


	
Crie seu perfil no git hub
Crie um repositório
Crie uma cópia local desse repositório
Crie um arquivo novo nesse repositório
Atualize a versão remota do repositório
Crie uma issue simulando uma possível alteração a ser feita ou bug a ser corrigido
Crie uma branch do repositório
Faça uma alteração na branch
Sincronize a branch com a árvore Principal
Faça fork do repositório de um dos residentes
Crie um novo arquivo nesse repositório
Faça um pull request para o repositório
*/

	
/* Aula 3 - Parte 2 - Referencial Teórico

Exercício pós-aula (6-8-2020)

O que é Kanban?
Como é usado para auxiliar o processo de desenvolvimento de software?
O que é Github Project
Como Github Project pode auxiliar a implementar o modelo Kanban?
Simule um projeto e atividades de projeto com base no kanban utilizando Github Project
Faça uma apresentação dos resultados

Respostas:

Sistema de gerenciamento de produção e projeto, criado no japão em 1950, adotado pela Toyota.
O kanban fornece facilidade a visualização do workflow do projeto (Lista/Pilha de tarefas), permitindo acompanhar o progresso e os delays.
O kanban pode auxiliar a tracker e limitar a quantidade de tarefas em progresso.

GitHub Project

GitHub e Kanban

*/


/*
Aula 03 - parte 2 - Exercícios
1 exibir apenas números naturais ímpares de 1 até 99.

seq 1 2 99

2 Escreva um script Bash que aceite como entrada um nome e exiba uma saudação: "Bem-vindo (nome)"
#!/bin/bash

echo 'Enter you name'
read name
echo 'Welcome! Greetins' ${name} 

3 Use um loop para exibir os números naturais de 1 até 50
for ((i=0;i<51;i++));do
echo $i
done

4 Dado dois números inteiros, e, encontre sua soma, diferença, produto, 
quociente e resto da divisão.

echo 'Enter first number: '
read number1
echo 'Enter second number: '
read number2

echo 'The sum is: ' $((number1+number2))
echo 'The difference is: ' $((number1-number2))
echo 'The product is: ' $((number1*number2))
echo 'The quotient is: ' $((number1 / number2))
echo 'The reminder is: ' $((number2 % number1))


//5 Leia em um caractere da entrada Se o caractere for 'Y' ou 'y', exiba "YES”, 
se o caractere for 'N' ou 'n', exiba "NÃO". 
Se for outra coisa exiba não conheço

#!/bin/bash

echo 'Insert a char: '
read char

if [[ "$char" == "Y" ]] || [[ "$char" == "y" ]]
then
echo "YES"
elif [[ "$char" == "N" ]] || [[ "$char" == "n" ]]
then
echo "NAO"
else
echo "Char desconhecido"
fi


6 Dados três números inteiros (representando os três lados de um triângulo, 
identifique se o triângulo é escaleno, isósceles ou equilátero.
#!/bin/bash

echo 'Enter x:'
read x
echo 'Enter y:'
read y
echo 'Enter z:'
read z

if [[ x -eq  y ]] && [[ x -eq z ]]; then
echo 'EQUILATERAL'
elif [[ x -eq y ]] || [[ x -eq z ]] || [[ y -eq z ]]; then
echo 'ISOSCELES'
else
echo 'SCALENE'
fi


7 receba um número N e o nome de um arquivo gere N números aleatoriamente 
e salve os números (um em cada linha) no arquivo passado como parâmetro

#!/bin/bash

echo 'Enter a numeral: '
read N

echo 'Enter file name: '
read name

for ((i=0;i<N;i++));do
echo $RANDOM >> $name.txt
done



8 considere um arquivo com diversos números (um em cada linha) calcule a média, 
desvio padrão e mediana

#!/bin/bash

#CREATE AND FILL A FILE
echo 'Enter a numeral: '
read N

echo 'Enter file name: '
read name

for ((i=0;i<N;i++));do
echo $RANDOM >> $name.txt
done

#MEAN
sum=0;
while read num;
do (( sum += num ));
done < $name.txt;
echo 'The sum is:' $sum

echo 'N is: ' $N;

mean=0;
while read sum;
do(( mean= sum/N ));
done < $name.txt;
echo 'The mean is: ' $mean;

#MEDIAN

lines_quant=$(wc -l < $name.txt);
echo 'Quantidade linhas: ' ${lines_quant}

if [[ $lines_quant%2 != 0 ]]
then
median_pos=$(((lines_quant+1)/2))
median=$(sed -n $median_posp $name.txt)
else
divisao=$lines_quant/2
posicao_1=$((divisao));
posicao_2=$((divisao+1));
median_pos=$(((posicao_1+posicao_2)/2))
median=$(sed -n $median_posp $name.txt)
fi
echo 'Median_position is: ' $median_pos
echo 'Median is: falta imprimir o conteúdo da linha no posicao acima ' $median

#FALTOU ELABORAR A LOGICA PARA O OPERADOR DO DESVIO PADRAO



9 Se o valor gasto por um cliente em um determinado dia for maior ou igual à 2x despesa mediana do cliente por um número final de dias, isso é considerado uma fraude potencial e um alerta é emitido.

Dado o número de dias finais e as despesas diárias totais de um cliente por um período de dias, localize e imprima o número de vezes que o cliente receberá uma notificação durante todos os dias.

Por exemplo, d=3 e gastos = [10,20,30,40,50] Nos três primeiros dias, eles apenas coletam dados de gastos. No dia 4 temos gastos finais [10,20,30] A mediana é 20 e a despesa do dia é 40. 40 é maior ou igual a 2x20 portanto haverá uma notificação de possível fraude No dia 5 os gastos são [20,30,40] a mediana é 30x2 que é igual a 60 e o gasto é 50 que é menor que 60, portanto nao haverá notificação de fraude

Faça um script bash que recebe a movimentação em um arquivo texto e o valor d como parâmetro e retorno quantas notificações o cliente receberá Crie ao menos 3 arquivos de entrada de movimentação


#PEDIR AJUDA



10
Para duas cadeias A e B, definimos a similaridade das cadeias como sendo o comprimento do prefixo mais longo comum a ambas as cadeias. Por exemplo, a similaridade das cadeias "abc" e "abd" é 2, enquanto a similaridade das cadeias "aaa" e "aaab" é 3.

Crie um script bash que implementa essa função de similaridade Invente uma outra métrica de obter similaridade de strings e faça uma análise comparativa usando uma mesma entrada







11 Desenvolver uma aplicação em bash

Realizar cadastros: 
usuários: id_usuario, Nome, idade, sexo 
Produtos: id_produto, valor, 
tamanho nota_fiscal: id_compra,id_usuario,data 
produtos_nota_fiscal: id_compra,id_produto,quantidade

Criar um módulo que calcula:

Média de quantidade de produtos comprados por usuário
Média de valor por usuário
Mostrar média de valor por categoria de usuário
Ex1: média de valor gasto por homem x mulher
Ex2: média de valor gasto por pessoas com idade entre 0 a 18 x pessoas com idade entre 18 a 99
Valor médio de compra por horário






*/

